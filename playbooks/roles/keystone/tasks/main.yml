---

- file: path={{ deploy_dir }} state=directory

- synchronize: src={{ source_dir }}/keystone dest={{ deploy_dir }}
  delegate_to: localhost

#- shell: pip install {{ item }} --no-allow-insecure
#  with_items:
#    - idna
#    - pyasn1
#    - enum34
#    - ipaddress
#    - cffi
#    - pycparser
#    - cryptography
#
#- shell: pip install {{ item }} --no-allow-insecure
#  with_lines: python /etc/ansible/facts.d/get-requirements.py {{ deploy_dir }}/keystone
#
#- shell: pip install -e {{ deploy_dir }}/keystone --no-allow-insecure

- file: path={{ item }} state=directory owner={{ user_name }} group={{ group_name }}
  with_items:
    - /etc/keystone
    - /var/log/keystone

- copy: src={{ deploy_dir }}/keystone/etc/keystone.conf.sample dest=/etc/keystone/keystone.conf

- copy: src={{ deploy_dir }}/keystone/etc/policy.json dest=/etc/keystone/policy.json

- copy: src={{ deploy_dir }}/keystone/etc/keystone-paste.ini dest=/etc/keystone/keystone-paste.ini

- copy: src={{ deploy_dir }}/keystone/etc/logging.conf.sample dest=/etc/keystone/logging.conf


- ini_file: dest=/etc/keystone/keystone.conf
            section={{item.section}} option={{item.option}} value={{item.value}}
  with_items:
    - {section: 'DEFAULT', option: 'admin_token', value: '{{keystone_admin_token}}'}
    - {section: 'database', option: 'connection', value: 'mysql://root:{{ keystone_dbpass }}@{{ ansible_hostname }}/keystone'}
    - {section: 'memcache', option: 'servers', value: 'localhost:11211'}
    - {section: 'token', option: 'provider', value: 'keystone.token.providers.uuid.Provider'}
    - {section: 'token', option: 'driver', value: 'keystone.token.persistence.backends.memcache.Token'}
    - {section: 'revoke', option: 'driver', value: 'keystone.contrib.revoke.backends.sql.Revoke'}
    - {section: 'DEFAULT', option: 'verbose', value: 'True'}
    - {section: 'DEFAULT', option: 'log_file', value: 'keystone.log'}
    - {section: 'DEFAULT', option: 'log_dir', value: '/var/log/keystone'}

- command: keystone-manage db_sync


#- shell: keystone-all &

#TODO: wait until kestone ready

#- template: src=wsgi-keystone.conf.j2 dest=/etc/httpd/conf.d/wsgi-keystone.conf
#
#- file: path=/var/www/cgi-bin/keystone state=directory
#
#- template: src=wsgi-keystone.py.j2 dest={{ item }}
#  with_items:
#    - /var/www/cgi-bin/keystone/main
#    - /var/www/cgi-bin/keystone/admin
#
#- command: chown -R keystone:keystone /var/www/cgi-bin/keystone
#- command: chmod 755 /var/www/cgi-bin/keystone
#
#- lineinfile: dest=/etc/httpd/conf/httpd.conf regexp='#?ServerName' line='ServerName {{ ansible_hostname }}'
#
#- service: name=httpd enabled=yes state=started





- lineinfile: dest=~/.bashrc regexp="export OS_SERVICE_TOKEN=" line="export OS_SERVICE_TOKEN={{ keystone_admin_token }}"
- lineinfile: dest=~/.bashrc regexp="export OS_SERVICE_ENDPOINT=" line="export OS_SERVICE_ENDPOINT={{ keystone_admin_url }}"

- lineinfile: dest=~/.bashrc regexp="export OS_TOKEN=" line="export OS_TOKEN={{ keystone_admin_token }}"
- lineinfile: dest=~/.bashrc regexp="export OS_URL=" line="export OS_URL={{ keystone_admin_url }}"

- lineinfile: dest=~/.bashrc regexp="export OS_PROJECT_DOMAIN_ID=" line="export OS_PROJECT_DOMAIN_ID=default"
- lineinfile: dest=~/.bashrc regexp="export OS_PROJECT_NAME=" line="export OS_PROJECT_NAME=admin"
- lineinfile: dest=~/.bashrc regexp="export OS_USER_DOMAIN_ID=" line="export OS_USER_DOMAIN_ID=default"
- lineinfile: dest=~/.bashrc regexp="export OS_TENANT_NAME=" line="export OS_TENANT_NAME=admin"
- lineinfile: dest=~/.bashrc regexp="export OS_USERNAME=" line="export OS_USERNAME=admin"
- lineinfile: dest=~/.bashrc regexp="export OS_PASSWORD=" line="export OS_PASSWORD={{ admin_password }}"
- lineinfile: dest=~/.bashrc regexp="export OS_AUTH_URL=" line="export OS_AUTH_URL={{ keystone_auth_url }}/v3"




#TODO: volatile
- include: command.yml
  vars:
    get_command: openstack service show identity
    create_command: openstack service create --name keystone --description "OpenStack Identity" identity
#TODO: volatile
- include: command.yml
  vars:
    get_command: openstack endpoint show identity
    create_command: openstack endpoint create --publicurl "{{ keystone_service_url }}" --adminurl "{{ keystone_admin_url }}" --internalurl "{{ keystone_service_url }}" --region RegionOne identity

- include: command.yml
  vars:
    get_command: openstack project show admin
    create_command: openstack project create --description "Admin Project" admin

- include: command.yml
  vars:
    get_command: openstack user show admin
    create_command: openstack user create --password {{ admin_password }} admin

- include: command.yml
  vars:
    get_command: openstack role show admin
    create_command: openstack role create admin

- include: command.yml
  vars:
    get_command: openstack user role list --project admin admin
    create_command: openstack role add --project admin --user admin admin

- include: command.yml
  vars:
    get_command: openstack project show service
    create_command: openstack project create --description "Service Project" service

- include: command.yml
  vars:
    get_command: openstack project show demo
    create_command: openstack project create --description "Demo Project" demo


- include: command.yml
  vars:
    get_command: openstack user show demo
    create_command: openstack user create --password {{ demo_password }} demo

- include: command.yml
  vars:
    get_command: openstack role show user
    create_command: openstack role create user

- include: command.yml
  vars:
    get_command: openstack user role list --project demo demo
    create_command: openstack role add --project demo --user demo user
